/*
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

ext {
//  supportLibraryVersion = '25.4.0'
    supportLibraryVersion = '28.0.0-alpha3'
    grpcVersion = '1.14.0'      //1.12.0
    lifecycle_version = '1.1.1'
}

def releaseTime() {
    // return new Date().format("yyyy-MM-dd_HH-mm-ss", TimeZone.getTimeZone("Asia/Chongqing"))
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("Asia/Chongqing"))
}

android {
//    compileSdkVersion 25
//    buildToolsVersion '25.0.3'
    compileSdkVersion = 28
    buildToolsVersion = "28.0.2"

    defaultConfig {
        applicationId "com.uni.cloud.lang"
//        targetSdkVersion 25
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 0
        versionName '0.07'
//        jackOptions {
//            enabled true
//        }
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
//        useJack true
    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        release {
            storeFile file(project.properties.storeFile)
            storePassword project.properties.storePassword
            keyAlias project.properties.keyAlias
            keyPassword project.properties.keyPassword
        }
        config {
            storeFile file('F:/liwenbin/pos/spos.jks')
            keyAlias 'spos'
            keyPassword 'unitone@2018'
            storePassword 'unitone@2018'
        }
    }
//    flavorDimensions "minSdkVersion19"
//    productFlavors {
//        dev {
//            // Minimum version with platform multi-dex support
//            dimension  "minSdkVersion19"
//        }
//        prod {
//            // Minimum version that can run gRPC (TLS extension)
//            dimension   "minSdkVersion16"
//        }
//    }

    buildTypes {
        debug {
            minifyEnabled false
            multiDexEnabled true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
        resolutionStrategy.force "com.android.support:support-annotations:$supportLibraryVersion"
    }

    useLibrary 'org.apache.http.legacy'

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

//    android.applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                //这里修改apk文件�?//                output.outputFile = new File(output.outputFile.parent, "uChat-" + buildType.name + "-" + releaseTime() + "-v" +
//                        defaultConfig.versionName + "-" + defaultConfig.versionCode + ".apk");
//            }
//        }
//    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "uSpeech-${buildType.name}-v${defaultConfig.versionName}-${releaseTime()}.apk"
        }
    }

//    externalNativeBuild {
//        ndkBuild {
//           path 'src/main/jni/Android.mk'
//        }
//    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.1-1'
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc {
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}

dependencies {
    implementation files('libs/Msc.jar')
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Support libraries
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    // gRPC
    implementation "io.grpc:grpc-okhttp:$grpcVersion"
    implementation "io.grpc:grpc-protobuf-lite:$grpcVersion"
    implementation "io.grpc:grpc-stub:$grpcVersion"
    implementation 'javax.annotation:javax.annotation-api:1.2'
//    protobuf 'com.google.protobuf:protobuf-java:3.3.1'

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

//    implementation 'org.conscrypt:conscrypt-android:1.4.1+'

//    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
  //  implementation "android.arch.lifecycle:$lifecycle_version"

    // OAuth2 for Google API
    implementation('com.google.auth:google-auth-library-oauth2-http:0.7.0') {
        exclude module: 'httpclient'
    }

    // Tests
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
//    implementation 'com.android.support:appcompat-v7:28.0.0'
//    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
//    implementation 'com.android.support:design:28.0.0'
//    implementation 'com.android.support:recyclerview-v7:28.0.0'

//    implementation 'com.android.support.test:runner:1.0.2'
//    implementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//    implementation 'com.qmuiteam:qmui:1.1.6'
//    implementation 'com.jakewharton:butterknife:8.8.1'
//    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
//    implementation 'android.arch.lifecycle:extensions:1.1.1'
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
//    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
//    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'
//    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.5'
}

task copySecretKey(type: Copy) {
    def File secretKey = file "$System.env.GOOGLE_APPLICATION_CREDENTIALS"
    from secretKey.getParent()
    include secretKey.getName()
    into 'src/main/res/raw'
    rename secretKey.getName(), "credential.json"
}

preBuild.dependsOn(copySecretKey)


